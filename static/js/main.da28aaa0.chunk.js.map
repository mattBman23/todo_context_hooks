{"version":3,"sources":["context/TodoContext.js","components/todo/TodoForm.js","components/todo/TodoList.js","components/Todo.js","index.js"],"names":["TodoContext","createContext","TodoProvider","children","initState","JSON","parse","localStorage","getItem","useState","todos","setTodos","chosenTodo","setChosenTodo","useEffect","setItem","stringify","Provider","value","createTodo","title","id","uuidv4","isDone","updateTodo","map","todo","deleteTodo","filter","checkTodo","TodoForm","useContext","setTitle","className","type","placeholder","onChange","e","target","onClick","TodoList","length","li","animate","scale","transition","duration","whileHover","initial","style","textDecoration","textAlign","Todo","render","document","getElementById"],"mappings":"oMAGaA,EAAcC,0BACdC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvBC,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,GADtB,EAElBC,mBAASL,GAFS,mBAErCM,EAFqC,KAE9BC,EAF8B,OAGRF,mBAAS,MAHD,mBAGrCG,EAHqC,KAGzBC,EAHyB,KAK5CC,qBAAU,WACRP,aAAaQ,QAAQ,WAAYV,KAAKW,UAAUN,MAC/C,CAACA,IAkCJ,OACE,cAACV,EAAYiB,SAAb,CACEC,MAAO,CACLR,QACAE,aACAC,gBACAM,WAtCa,SAACC,GAClBT,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEU,QAAOC,GAAIC,cAAUC,QAAQ,OAsC/CC,WAnCa,SAACJ,EAAOC,GACzBV,EACED,EAAMe,KAAI,SAACC,GAKT,OAJIA,EAAKL,KAAOA,IACdK,EAAKN,MAAQA,GAGRM,OA6BPC,WAxBa,SAACN,GAClBV,EAASD,EAAMkB,QAAO,SAACF,GAAD,OAAUA,EAAKL,KAAOA,OAwBxCQ,UArBY,SAACR,GACjBV,EACED,EAAMe,KAAI,SAACC,GAKT,OAJIA,EAAKL,KAAOA,IACdK,EAAKH,QAAUG,EAAKH,QAGfG,QAMX,SAWGvB,KCtDM2B,EAAW,WAAO,IAAD,EACkCC,qBAC5D/B,GADMmB,EADoB,EACpBA,WAAYP,EADQ,EACRA,WAAYC,EADJ,EACIA,cAAeW,EADnB,EACmBA,WADnB,EAKFf,mBAAS,IALP,mBAKrBW,EALqB,KAKdY,EALc,KAO5BlB,qBAAU,WAENkB,EADEpB,EACOA,EAAWQ,MAEX,MAEV,CAACR,IAgBJ,OACE,sBAAKqB,UAAU,SAASZ,GAAG,QAA3B,UACE,2CACA,uBACEa,KAAK,OACLb,GAAG,UACHH,MAAOE,EACPe,YAAY,WACZC,SAtBgB,SAACC,GACrBL,EAASK,EAAEC,OAAOpB,UAuBhB,qBAAKe,UAAU,SAASM,QApBN,WAChB3B,GACFY,EAAWJ,EAAOR,EAAWS,IAC7BR,EAAc,QAEdM,EAAWC,GACXY,EAAS,MAcT,SACGpB,EAAa,SAAW,Y,OCvCpB4B,EAAW,WAAO,IAAD,EAC4BT,qBACtD/B,GADMU,EADoB,EACpBA,MAAOG,EADa,EACbA,cAAegB,EADF,EACEA,UAAWF,EADb,EACaA,WAIzC,OAAOjB,EAAM+B,OACX,qBAAKpB,GAAG,OAAR,SACGX,EAAMe,KAAI,SAACC,GAAD,OACT,cAAC,IAAOgB,GAAR,CAEEC,QAAS,CAAEC,MAAO,IAClBC,WAAY,CAAEC,SAAU,IACxBC,WAAY,CAAEH,MAAO,KACrBI,QAAS,CAAEJ,MAAO,IALpB,SAOE,sBAAKX,UAAU,WAAf,UACE,qBACEgB,MAAOvB,EAAKH,OAAS,CAAE2B,eAAgB,gBAAmB,GAC1DjB,UAAU,WAFZ,SAIGP,EAAKN,QAER,sBAAKa,UAAU,YAAf,UACE,qBACEM,QAAS,kBAAM1B,EAAca,IAC7BO,UAAU,0BAFZ,kBAMA,qBACEM,QAAS,kBAAMV,EAAUH,EAAKL,KAC9BY,UAAU,6BAFZ,mBAMA,qBACEM,QAAS,kBAAMZ,EAAWD,EAAKL,KAC/BY,UAAU,4BAFZ,2BA1BCP,EAAKL,SAsChB,oBAAI4B,MAAO,CAAEE,UAAW,UAAxB,4BC/CSC,EAAO,WAClB,OACE,qCACE,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,Q,MCFNC,iBACE,cAAC,EAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.da28aaa0.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const TodoContext = createContext();\r\nexport const TodoProvider = ({ children }) => {\r\n  const initState = JSON.parse(localStorage.getItem('todoList')) || [];\r\n  const [todos, setTodos] = useState(initState);\r\n  const [chosenTodo, setChosenTodo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todoList', JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const createTodo = (title) => {\r\n    setTodos([...todos, { title, id: uuidv4(), isDone: false }]);\r\n  };\r\n\r\n  const updateTodo = (title, id) => {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.title = title;\r\n        }\r\n\r\n        return todo;\r\n      })\r\n    );\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    setTodos(todos.filter((todo) => todo.id !== id));\r\n  };\r\n\r\n  const checkTodo = (id) => {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.isDone = !todo.isDone;\r\n        }\r\n\r\n        return todo;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TodoContext.Provider\r\n      value={{\r\n        todos,\r\n        chosenTodo,\r\n        setChosenTodo,\r\n        createTodo,\r\n        updateTodo,\r\n        deleteTodo,\r\n        checkTodo,\r\n      }}\r\n    >\r\n      {children}\r\n    </TodoContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { TodoContext } from '../../context/TodoContext';\r\n\r\nexport const TodoForm = () => {\r\n  const { createTodo, chosenTodo, setChosenTodo, updateTodo } = useContext(\r\n    TodoContext\r\n  );\r\n\r\n  const [title, setTitle] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (chosenTodo) {\r\n      setTitle(chosenTodo.title);\r\n    } else {\r\n      setTitle('');\r\n    }\r\n  }, [chosenTodo]);\r\n\r\n  const changeHandler = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const submitHandler = () => {\r\n    if (chosenTodo) {\r\n      updateTodo(title, chosenTodo.id);\r\n      setChosenTodo(null);\r\n    } else {\r\n      createTodo(title);\r\n      setTitle('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\" id=\"myDIV\">\r\n      <h2>Todo List</h2>\r\n      <input\r\n        type=\"text\"\r\n        id=\"myInput\"\r\n        value={title}\r\n        placeholder=\"Title...\"\r\n        onChange={changeHandler}\r\n      />\r\n      <div className=\"addBtn\" onClick={submitHandler}>\r\n        {chosenTodo ? 'Update' : 'Add'}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { motion } from 'framer-motion';\r\nimport React, { useContext } from 'react';\r\nimport { TodoContext } from '../../context/TodoContext';\r\n\r\nexport const TodoList = () => {\r\n  const { todos, setChosenTodo, checkTodo, deleteTodo } = useContext(\r\n    TodoContext\r\n  );\r\n\r\n  return todos.length ? (\r\n    <div id=\"myUL\">\r\n      {todos.map((todo) => (\r\n        <motion.li\r\n          key={todo.id}\r\n          animate={{ scale: 0.9 }}\r\n          transition={{ duration: 0.3 }}\r\n          whileHover={{ scale: 0.95 }}\r\n          initial={{ scale: 0.9 }}\r\n        >\r\n          <div className=\"todoBody\">\r\n            <div\r\n              style={todo.isDone ? { textDecoration: 'line-through' } : {}}\r\n              className=\"leftTodo\"\r\n            >\r\n              {todo.title}\r\n            </div>\r\n            <div className=\"rightTodo\">\r\n              <div\r\n                onClick={() => setChosenTodo(todo)}\r\n                className=\"btn btn-info float-left\"\r\n              >\r\n                Edit\r\n              </div>\r\n              <div\r\n                onClick={() => checkTodo(todo.id)}\r\n                className=\"btn btn-primary float-left\"\r\n              >\r\n                Check\r\n              </div>\r\n              <div\r\n                onClick={() => deleteTodo(todo.id)}\r\n                className=\"btn btn-danger float-left\"\r\n              >\r\n                Delete\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </motion.li>\r\n      ))}\r\n    </div>\r\n  ) : (\r\n    <h2 style={{ textAlign: 'center' }}>List is empty</h2>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { TodoForm } from './todo/TodoForm';\r\nimport { TodoList } from './todo/TodoList';\r\n\r\nexport const Todo = () => {\r\n  return (\r\n    <>\r\n      <TodoForm />\r\n      <br />\r\n      <TodoList />\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Todo } from './components/Todo';\r\nimport { TodoProvider } from './context/TodoContext';\r\n\r\nimport './index.css';\r\n\r\nrender(\r\n  <TodoProvider>\r\n    <Todo />\r\n  </TodoProvider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}